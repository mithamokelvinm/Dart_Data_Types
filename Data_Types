import java.util.Scanner;

public class NumberToWords {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter a number (between 1 and 9999): ");
        int number = scanner.nextInt();

        // Input validation
        if (number < 1 || number > 9999) {
            System.out.println("Invalid input. Please enter a number between 1 and 9999.");
            return;
        }

        String numberInWords = convertNumber(number);
        System.out.println(numberInWords);
    }

    public static String convertNumber(int number) {
        // Arrays to store word representations of digits and tens
        String[] ones = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten",
                "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
        String[] tens = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};

        // Separating digits by place value
        int thousand = number / 1000;
        int hundred = (number % 1000) / 100;
        int tensDigit = (number % 100) / 10;
        int onesDigit = number % 10;

        String result = "";

        // Handling thousands place
        if (thousand > 0) {
            result += convertNumber(thousand) + " Thousand ";
        }

        // Handling hundreds place
        if (hundred > 0) {
            result += ones[hundred] + " Hundred ";
        }

        // Handling tens and ones place
        if (tensDigit > 0) {
            if (tensDigit == 1 && onesDigit > 0) {
                result += ones[tensDigit + 9]; // Special case for teens (11-19)
            } else {
                result += tens[tensDigit] + " ";
            }
        }

        if (onesDigit > 0 && (tensDigit != 1 || tensDigit == 0)) {
            result += ones[onesDigit];
        }

        return result.trim();
    }
}
